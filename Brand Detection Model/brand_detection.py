# -*- coding: utf-8 -*-
"""Brand Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/150X51MsZ9Rt8QacgOuDCDWSDn2mSRecL
"""

!wget -O /content/data.zip https://drive.google.com/file/d/1Hdrk5_dnJvJPoupPsJ0PaRyLPPDP7b4f/view?usp=sharing/data.zip

!unzip -q /content/data.zip -d /content/custom_data

!wget -O /content/train_val_split.py https://drive.google.com/file/d/1Hdrk5_dnJvJPoupPsJ0PaRyLPPDP7b4f/view?usp=sharing/train_val_split.py

"""What is data.yaml in YOLO object detection?
- It’s a configuration file that tells the YOLO training script where to find your dataset and how to interpret it.
- It contains paths to your training and validation images, the number of object classes, and their names.
"""

import yaml
import os

def create_data_yaml(path_to_classes_txt, path_to_data_yaml):
    # Check if classes.txt exists
    if not os.path.exists(path_to_classes_txt):
        print(f'classes.txt file not found! Please create a classes.txt labelmap '
              f'and move it to {path_to_classes_txt}')
        return

    # Read class names
    with open(path_to_classes_txt, 'r') as f:
        classes = [line.strip() for line in f if line.strip()]

    number_of_classes = len(classes)

    # Build data dictionary
    data = {
        'path': '/content/data',               # Root folder for dataset
        'train': 'train/images',               # Relative to `path`
        'val': 'validation/images',            # Relative to `path`
        'nc': number_of_classes,
        'names': classes
    }

    # Ensure output dir exists
    os.makedirs(os.path.dirname(path_to_data_yaml), exist_ok=True)

    # Write to YAML
    with open(path_to_data_yaml, 'w') as f:
        yaml.dump(data, f, sort_keys=False)

    print(f'Created config file at {path_to_data_yaml}')

create_data_yaml('/content/custom_data/classes.txt', '/content/data.yaml')

!yolo detect train data=/content/data.yaml model=yolo11s.pt epochs=10 imgsz=320

"""- yolo detect train — YOLO command to start detection training.

- data=/content/data.yaml — Path to your dataset config file (with class info, train/val paths).

- model=yolo11s.pt — Pretrained YOLO model checkpoint to fine-tune from. Here, a small model (11s).

- epochs=10 — Train for 10 passes through the full dataset.

- imgsz=320 — Resize input images to 640x640 pixels for training.
"""

!find runs/ -name best.pt

!yolo detect predict model=runs/detect/train8/weights/best.pt source=data/validation/images save=True

import glob
from IPython.display import Image, display

for image_path in glob.glob('/content/runs/detect/predict/*.jpg')[:10]:
    display(Image(filename=image_path, height=400))

import os
output_folder = '/content/runs/detect/predict'
print(os.listdir(output_folder))

from IPython.display import Image, display

output_folder = '/content/runs/detect/predict'
files = os.listdir(output_folder)
print("Files in predict folder:", files)

# Pick the first image file (usually the predicted one)
image_path = os.path.join(output_folder, files[0])

display(Image(filename=image_path, height=400))

output_folder = '/content/runs/detect/predict'
files = os.listdir(output_folder)
print("Files in predict folder:", files)

# Pick the first image file (usually the predicted one)
image_path = os.path.join(output_folder, files[1])

display(Image(filename=image_path, height=400))

